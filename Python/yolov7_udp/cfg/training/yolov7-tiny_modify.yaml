# parameters
# nc: 80  # number of classes
nc: 3  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32


backbone:
  # [from, number, module, args] c2, k=1, s=1, p=None, g=1, act=True
  [[-1, 1, Conv, [32, 3, 2, None, 1, nn.LeakyReLU(0.1)]],   # 0-P1/2        v
  
   [-1, 1, Conv, [64, 3, 2, None, 1, nn.LeakyReLU(0.1)]],   # 1-P2/4        v
   
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 2
  #  [-2, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]], # 3
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 4        (3)
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 5        (4)
   [[-1, -2, -3], 1, Concat, [1]],                          # 6        (5)
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 7        (6)  v
   
   [-1, 1, MP, []],                                         # 8-P3/8   (7)
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 9        (8)
  #  [-2, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 10   
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 11       (9)
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 12       (10)
   [[-1, -2, -3], 1, Concat, [1]],                          # 13       (11)
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 14       (12) v
   
   [-1, 1, MP, []],                                         # 15-P4/16 (13) v
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 16       (14) 
  #  [-2, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 17
   [-1, 1, Conv, [128, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 18       (15) 
   [-1, 1, Conv, [128, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 19       (16) 
   [[-1, -2, -3], 1, Concat, [1]],                          # 20       (17) 
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 21       (18) v
   
   [-1, 1, MP, []],                                         # 22-P5/32 (19) v
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 23       (20)
  #  [-2, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],# 24
   [-1, 1, Conv, [256, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 25       (21)
   [-1, 1, Conv, [256, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 26       (22)
   [[-1, -2, -3, -4], 1, Concat, [1]],                      # 27       (23)
   [-1, 1, Conv, [512, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 28       (24) v
  ]

# yolov7-tiny head
head:
  [[-1, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 29       (25)
   [-2, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 30       (26)
   [-1, 1, SP, [5]],                                        # 31       (27)
   [-2, 1, SP, [9]],                                        # 32       (28)
   [-3, 1, SP, [13]],                                       # 33       (29)
   [[-1, -2, -3, -4], 1, Concat, [1]],                      # 34       (30)
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 35       (31)
   [[-1, -7], 1, Concat, [1]],                              # 36       (32)
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 37       (33) v
  
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 38       (34)
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],              # 39       (35)
   [18, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 40       (36) route backbone P4, 21 -> 18 v
   [[-1, -2], 1, Concat, [1]],                              # 41       (37)
   
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 42       (38)
   [-2, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 43       (39)
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 44       (40)
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 45       (41)
   [[-1, -2, -3, -4], 1, Concat, [1]],                      # 46       (42)
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 47       (43) v
  
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 48       (44)
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],              # 49       (45)
   [12, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 50       (46) route backbone P3, 14 -> 12 v
   [[-1, -2], 1, Concat, [1]],                              # 51       (47)
   
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 52       (48)
   [-2, 1, Conv, [32, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 53       (49)
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 54       (50)
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 55       (51)
   [[-1, -2, -3, -4], 1, Concat, [1]],                      # 56       (52)
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 57       (53)

   [-1, 1, Conv, [128, 3, 2, None, 1, nn.LeakyReLU(0.1)]],  # 58       (54)
   [[-1, 43], 1, Concat, [1]],                              # 59       (55), 47 -> 43
   
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 60       (56)
   [-2, 1, Conv, [64, 1, 1, None, 1, nn.LeakyReLU(0.1)]],   # 61       (57)
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 62       (58)
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.LeakyReLU(0.1)]],   # 63       (59)
   [[-1, -2, -3, -4], 1, Concat, [1]],                      # 64       (60)
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 65       (61)   v
   
   [-1, 1, Conv, [256, 3, 2, None, 1, nn.LeakyReLU(0.1)]],  # 66       (62)
   [[-1, 33], 1, Concat, [1]],                              # 67       (63), 37 -> 33
   
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 68       (64)
   [-2, 1, Conv, [128, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 69       (65)
   [-1, 1, Conv, [128, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 70       (66)
   [-1, 1, Conv, [128, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 71       (67)
   [[-1, -2, -3, -4], 1, Concat, [1]],                      # 72       (68)
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.LeakyReLU(0.1)]],  # 73       (69)  v
      
   [53, 1, Conv, [128, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 74       (70), 57 -> 53
   [61, 1, Conv, [256, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 75       (71), 65 -> 61
   [69, 1, Conv, [512, 3, 1, None, 1, nn.LeakyReLU(0.1)]],  # 76       (72), 73 -> 69

   [[70,71,72], 1, IDetect, [nc, anchors]],                 # 77       (73) # Detect(P3, P4, P5)
  ]
